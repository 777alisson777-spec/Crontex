# Generated by Django 5.2.6 on 2025-10-24 12:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import people.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('people', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
            options={
                'verbose_name': 'Categoria de pessoa',
                'verbose_name_plural': 'Categorias de pessoas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_cliente', models.BooleanField(default=False, verbose_name='Cliente')),
                ('is_fornecedor', models.BooleanField(default=False, verbose_name='Fornecedor')),
                ('is_colaborador', models.BooleanField(default=False, verbose_name='Colaborador')),
                ('is_parceiro', models.BooleanField(default=False, verbose_name='Parceiro')),
                ('person_kind', models.CharField(blank=True, choices=[('F', 'Física'), ('J', 'Jurídica')], max_length=1, verbose_name='Tipo de pessoa')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Nome / Razão social')),
                ('fantasy_name', models.CharField(blank=True, max_length=200, verbose_name='Nome fantasia')),
                ('cpf', models.CharField(blank=True, max_length=14, validators=[people.models.validate_cpf], verbose_name='CPF')),
                ('cnpj', models.CharField(blank=True, max_length=18, validators=[people.models.validate_cnpj], verbose_name='CNPJ')),
                ('ie', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(message='IE inválida.', regex='^[0-9A-Za-z\\.-/]*$')], verbose_name='Inscrição Estadual')),
                ('ie_isento', models.BooleanField(default=False, verbose_name='IE Isento')),
                ('rg', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(message='RG inválido.', regex='^[0-9A-Za-z\\.-/]*$')], verbose_name='RG')),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=16, validators=[django.core.validators.RegexValidator(message='Telefone deve conter apenas dígitos (DDI opcional), ex: +5511999999999.', regex='^\\+?\\d{10,15}$')], verbose_name='Telefone principal')),
                ('phone_alt', models.CharField(blank=True, max_length=16, validators=[django.core.validators.RegexValidator(message='Telefone deve conter apenas dígitos (DDI opcional), ex: +5511999999999.', regex='^\\+?\\d{10,15}$')], verbose_name='Telefone alternativo')),
                ('status', models.CharField(choices=[('AT', 'Ativo'), ('IN', 'Inativo'), ('EX', 'Excluído (soft-delete)'), ('SM', 'Sem movimentação')], default='AT', max_length=2, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft-delete para lixeira.')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='contacts', to='people.category', verbose_name='Categorias')),
            ],
            options={
                'verbose_name': 'Contato',
                'verbose_name_plural': 'Contatos',
                'ordering': ['-created_at', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, help_text='Ex.: Cobrança, Entrega, Matriz...', max_length=60, verbose_name='Rótulo')),
                ('cep', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(message='CEP deve ser 00000-000 ou 00000000.', regex='^\\d{5}-?\\d{3}$')], verbose_name='CEP')),
                ('street', models.CharField(blank=True, max_length=200, verbose_name='Logradouro')),
                ('number', models.CharField(blank=True, max_length=20, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('district', models.CharField(blank=True, max_length=100, verbose_name='Bairro')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('uf', models.CharField(blank=True, max_length=2, verbose_name='UF')),
                ('country', models.CharField(blank=True, default='Brasil', max_length=60, verbose_name='País')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='people.contact')),
            ],
            options={
                'verbose_name': 'Endereço',
                'verbose_name_plural': 'Endereços',
                'ordering': ['contact', 'label', 'created_at'],
            },
        ),
        migrations.DeleteModel(
            name='Collaborator',
        ),
        migrations.DeleteModel(
            name='CollaboratorRole',
        ),
    ]
